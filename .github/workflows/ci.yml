name: CI Pipeline

on:
  push:
  pull_request:

permissions: write-all  # Required for CodeQL & SARIF processing

jobs:
  lint_frontend:
    name: Lint Frontend (React TypeScript)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Dependencies
        run: cd frontend && npm ci

      - name: Run ESLint
        run: cd frontend && npx eslint . --ext .ts,.tsx -f html -o eslint-report.html

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linting tool report
          path: |
            ./eslint-report

  load_env:
    name: Load Environment Variables From Secrets
    runs-on: ubuntu-latest
    env:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Set up environment variables
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV

      - name: Debug Environment Variables
        run: |
          echo "DB_USERNAME=$DB_USERNAME"
          echo "DB_PASSWORD is set but hidden"

  test_backend:
    name: Test Backend (Spring Boot JUnit)
    runs-on: ubuntu-latest
    env:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permissions to Maven Wrapper
        run: chmod +x recipe_management_backend/mvnw

      - name: Build and Test Spring Boot App
        run: cd recipe_management_backend && ./mvnw clean verify

  sast_scan:
    name: Static Application Security Testing (SAST)
    runs-on: ubuntu-latest
    needs: test_backend
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/SIT' || github.ref == 'refs/heads/cicd-setup'
    env:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Set up Java (LTS Version)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permissions to Maven Wrapper
        run: chmod +x recipe_management_backend/mvnw

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, java
          queries: security-and-quality
      
      - name: Build Java Backend
        run: cd recipe_management_backend && ./mvnw clean package -DskipTests

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"
          output: sarif
      
      - name: Archive CodeQL SARIF report
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif
          path: codeql-sarif

  dast_scan:
    name: Dynamic Application Security Testing (DAST)
    runs-on: ubuntu-latest
    needs: sast_scan
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/cicd-setup'
    env:
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Grant execute permissions to Maven Wrapper
        run: chmod +x recipe_management_backend/mvnw

      - name: Start Backend Server
        run: |
          cd recipe_management_backend
          ./mvnw spring-boot:run &
          sleep 20  

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:8080'
      
      - name: Archive ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: DAST Scan Report
          path: /zap/wrk
